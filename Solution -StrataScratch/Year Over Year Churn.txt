Year Over Year Churn

https://platform.stratascratch.com/coding/10017-year-over-year-churn?code_type=1



SQL :

with cte1 as (
select extract(year from end_date) as year 
, sum(case when extract (year from end_date) is not null then 1 else 0 end)
               as n_churned
from lyft_drivers
group by extract(year from end_date)

),
cte2 as (
select * ,
     lag(n_churned,1,0) over ( order by year asc ) as n_churned_prev
from cte1 where year is not null )

select * , 
      case when n_churned > n_churned_prev then 'increase'
           when n_churned < n_churned_prev  then 'decrease'
           else 'no change' end as status
from cte2


Python :

# Import your libraries
import pandas as pd
import numpy as np

# Start writing code
lyft_drivers.head()

df= lyft_drivers
df['year'] = lyft_drivers.end_date.dt.year
df['churned'] =np.where( df['year'].isnull(),0,1)

df = df.groupby('year').agg(total_churn =("churned","sum")).reset_index()
df['prev_year_churn'] = df['total_churn'].shift(1)
df.fillna(0,inplace=True)

df['status'] = np.where(df['total_churn']>df['prev_year_churn'] , 'increase',
     np.where(df['total_churn'] < df['prev_year_churn'] , 'decrease', 'no change'))

df